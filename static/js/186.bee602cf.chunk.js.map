{"version":3,"file":"static/js/186.bee602cf.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAuCL,IACtDM,OAAM,SAAAC,GAAU,MAAM,IAAIC,MAAM,2BAChC,IAHuB,cACpBC,EADoB,yBAInBA,EAAIP,MAJe,2CAAH,sDAQZQ,EAAU,mCAAG,WAAML,GAAN,yFACDN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,EAA/C,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAGjBA,EAAKS,MAHY,2CAAH,sDAOVC,EAAU,mCAAG,WAAMP,GAAN,yFACDN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,IAD9C,uBAChBE,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAMVU,EAAe,mCAAG,WAAMC,GAAN,yFACNf,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDc,EAApD,+CADM,uBACrBZ,EADqB,EACrBA,KADqB,kBAEnBA,GAFmB,2CAAH,qD,yGCY5B,UAzCgB,WACd,OAA8Ba,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQZ,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAAkCU,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAa,GADG,mBAGKR,EAAAA,EAAAA,IAAWP,GAHhB,OAGRH,EAHQ,OAIde,EAAWf,GAJG,gDAMdqB,QAAQC,IAAR,KAAiB,SANH,yBAQdJ,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,CAACjB,KAGF,2BACGc,GACC,yCAEA,yBACGH,EAAQS,OAAS,GAChBT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,4BACE,wBAAG,oCAAYD,QACf,6BAAKC,EAAL,SAFQF,EADA,OAShBX,EAAQS,SAAU,mDAGzB,C","sources":["api/postApi.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59b71b0d016897afbcdce7c94929ab1d';\n\n//trending\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\n// details\nexport const getMovieById = async movieId => {\n  const res = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`)\n    .catch(error => {throw new Error('Error.Page is not found.');\n    });\n  return res.data;\n};\n\n//cast \nexport const getCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\n//reviews\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data.results;\n};\n\n// search\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ); return data;\n};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'api/postApi';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getReviews(movieId);\n        setReviews(data);\n      } catch (evt) {\n        console.log(evt, 'Error');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <div>\n          {reviews.length > 0 &&\n            reviews.map(({ id, author, content }) => (\n              <div key={id}>\n                <p><b>Author: {author}</b></p>\n                <p>\"{content}\"</p>\n              </div>\n              \n            ))}\n        </div>\n      )}\n      {!reviews.length && <p>There are no reviews.</p>}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","catch","error","Error","res","getCredits","cast","getReviews","getMoviesByName","query","useState","reviews","setReviews","useParams","isLoading","setIsLoading","useEffect","fetchData","console","log","length","map","id","author","content"],"sourceRoot":""}