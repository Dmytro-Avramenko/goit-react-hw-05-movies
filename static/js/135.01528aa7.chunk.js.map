{"version":3,"file":"static/js/135.01528aa7.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAuCL,IACtDM,OAAM,SAAAC,GAAU,MAAM,IAAIC,MAAM,2BAChC,IAHuB,cACpBC,EADoB,yBAInBA,EAAIP,MAJe,2CAAH,sDAQZQ,EAAU,mCAAG,WAAML,GAAN,yFACDN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,EAA/C,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAGjBA,EAAKS,MAHY,2CAAH,sDAOVC,EAAU,mCAAG,WAAMP,GAAN,yFACDN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,IAD9C,uBAChBE,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAMVU,EAAe,mCAAG,WAAMC,GAAN,yFACNf,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDc,EAApD,+CADM,uBACrBZ,EADqB,EACrBA,KADqB,kBAEnBA,GAFmB,2CAAH,qD,yLChC5B,EAAgC,oC,SCSnBa,EAAe,WAAO,IAAD,EACxBV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA0BY,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAS,mCAAG,2FAChBN,GAAa,GADG,mBAGUjB,EAAAA,EAAAA,IAAaC,GAHvB,OAGRuB,EAHQ,OAIdT,EAASS,GAJK,yEAQdP,GAAa,GARC,4EAAH,qDAWfM,GACD,GAAE,CAACtB,IAKJ,GAAKa,EAAL,CAGA,IAAQW,EACNX,EADMW,OAAQC,EACdZ,EADcY,MAAOC,EACrBb,EADqBa,aAAcC,EACnCd,EADmCc,SAAUC,EAC7Cf,EAD6Ce,aAAcC,EAC3DhB,EAD2DgB,YAEvDC,EAAWD,EAhCF,mCAgC2BA,EAAcE,EAClDC,EAAYC,KAAKC,MAA8B,IAAvBC,OAAOP,GAAuB,IACtDQ,EAAcZ,EAAOa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KACnDC,EAAcf,EAAagB,MAAM,EAAG,GAE1C,OACE,iCACE,iBAAKC,UAAWC,EAAhB,WACG,UAAA3B,EAAS4B,aAAT,eAAgBC,QACb,mBAAQH,UAAWC,EACfG,QAlBa,WACzB5B,EAASF,EAAS4B,MAAMC,KACzB,EAeS,UACiC,8CAGpC/B,GACC,yCAEA,4BACE,0BAAK,gBAAKiC,IAAG,UAAKlB,GAAYmB,IAAKxB,OACnC,iCACE,0BAAKA,EAAL,IAAagB,GAAW,WAAQA,EAAR,SACxB,2BACE,wBAAKT,EAAY,IAAK,wCAAgBA,EAAhB,UACtB,iCACA,qCACE,uBAAIL,QAEN,iCAAE,mCACA,8BAAIS,QAAJ,IAAIA,EAAAA,EAAe,wBAO/B,4BACE,qDACA,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMc,GAAG,OAAOL,MAAO5B,EAAS4B,MAAhC,qBAKF,yBACE,SAAC,KAAD,CAAMK,GAAG,UAAUL,MAAO5B,EAAS4B,MAAnC,gCAQR,SAAC,EAAAM,SAAD,WACE,SAAC,KAAD,QAzDL,CA6DF,EAED,G","sources":["api/postApi.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59b71b0d016897afbcdce7c94929ab1d';\n\n//trending\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\n// details\nexport const getMovieById = async movieId => {\n  const res = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`)\n    .catch(error => {throw new Error('Error.Page is not found.');\n    });\n  return res.data;\n};\n\n//cast \nexport const getCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\n//reviews\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data.results;\n};\n\n// search\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ); return data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"movie_details\":\"MovieDetails_movie_details__hOZzX\"};","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation, useNavigate, Link } from 'react-router-dom';\n\nimport { getMovieById } from \"api/postApi\";\nimport ErrorImage from '../../images/image.png';\n// import { PAGE_NAMES } from \"router/paths\";\nimport s from '../MovieDetails/MovieDetails.module.css';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();  \n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n    \n    useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const movieData = await getMovieById(movieId);\n        setMovie(movieData);\n      } catch (evt) {\n        // console.log(evt);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const handleGoBackButton = () => {\n    navigate(location.state.from);\n  };\n  if (!movie) {\n    return;\n  }\n  const { genres, title, release_date, overview, vote_average, poster_path } =\n    movie;\n  const imageSRC = poster_path ? IMAGEURL + poster_path : ErrorImage;\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n  const movieGenres = genres.map(genre => genre.name).join(' ');\n  const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <>\n      <div className={s.movie_details}>\n        {location.state?.from && (\n            <button className={s.movie_details}\n                onClick={handleGoBackButton}><span>‚ÜêGo back</span>\n            </button>\n        )}\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <div>\n            <div><img src={`${imageSRC}`} alt={title} /></div>\n            <>\n              <h2>{title} {releaseDate && `(${releaseDate})`}</h2>\n              <ul>\n                <li>{userScore > 0 && <p>User Score: {userScore}%</p>}</li>\n                <> \n                <b>Overview</b>\n                  <p>{overview}</p>\n                </>\n                <><b>Genres</b>\n                  <p>{movieGenres ?? ' - '}</p>\n                </>\n              </ul>\n            </>\n          </div>\n        )}\n      </div>\n      <div>\n        <h3> Additional information</h3>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={location.state}>\n                Cast\n              </Link>\n            </li>\n\n            <li>\n              <Link to=\"reviews\" state={location.state}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","catch","error","Error","res","getCredits","cast","getReviews","getMoviesByName","query","MovieDetails","useParams","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","navigate","useNavigate","useEffect","fetchData","movieData","genres","title","release_date","overview","vote_average","poster_path","imageSRC","ErrorImage","userScore","Math","round","Number","movieGenres","map","genre","name","join","releaseDate","slice","className","s","state","from","onClick","src","alt","to","Suspense"],"sourceRoot":""}