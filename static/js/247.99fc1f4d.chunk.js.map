{"version":3,"file":"static/js/247.99fc1f4d.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAuCL,IACtDM,OAAM,SAAAC,GAAU,MAAM,IAAIC,MAAM,2BAChC,IAHuB,cACpBC,EADoB,yBAInBA,EAAIP,MAJe,2CAAH,sDAQZQ,EAAU,mCAAG,WAAML,GAAN,yFACDN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,EAA/C,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAGjBA,EAAKS,MAHY,2CAAH,sDAOVC,EAAU,mCAAG,WAAMP,GAAN,yFACDN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,IAD9C,uBAChBE,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAMVU,EAAe,mCAAG,WAAMC,GAAN,yFACNf,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDc,EAApD,+CADM,uBACrBZ,EADqB,EACrBA,KADqB,kBAEnBA,GAFmB,2CAAH,qD,kHCgC5B,UA1Da,WACX,IAAQG,GAAYU,EAAAA,EAAAA,MAAZV,QACR,GAAkCW,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOL,EAAP,KAAaQ,EAAb,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBH,GAAa,GADG,mBAGKR,EAAAA,EAAAA,IAAWL,GAHhB,OAGRM,EAHQ,OAIdQ,EAAQR,GAJM,gDAMdW,QAAQC,IAAR,MANc,yBAQdL,GAAa,GARC,4EAAH,qDAWfG,GACD,GAAE,CAAChB,IACCM,EAIL,OACE,2BACGM,GACC,yCAEA,wBACGN,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC7BC,EAAWH,EAhCZ,kCAiCUA,EACXI,EACJ,OACE,2BACE,gBAAKC,IAAKF,EAAUG,IAAKL,EAAMM,MAAO,IAAKC,OAAQ,OACnD,4BACE,wBAAG,0BAAOP,MACTC,GACD,0BAAG,uCAAiB,gCAAQA,SAG1B,0BAAG,uCAAiB,8CARjBH,EAcZ,OAGHd,EAAKwB,SACL,0DAIP,C","sources":["api/postApi.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59b71b0d016897afbcdce7c94929ab1d';\n\n//trending\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\n// details\nexport const getMovieById = async movieId => {\n  const res = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`)\n    .catch(error => {throw new Error('Error.Page is not found.');\n    });\n  return res.data;\n};\n\n//cast \nexport const getCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\n//reviews\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data.results;\n};\n\n// search\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ); return data;\n};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'api/postApi';\nimport profileError from '../../images/profile.png';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const cast = await getCredits(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <ul>\n          {cast.map(({ id, profile_path, name, character }) => {\n            const imageSRC = profile_path\n              ? IMAGEURL + profile_path\n              : profileError;\n            return (\n              <li key={id}>\n                <img src={imageSRC} alt={name} width={200} height={300} />\n                <div>\n                  <p><span>{name}</span></p>\n                  {character ? (\n                  <p><b>Character:</b><span> {character}</span>\n                    </p>\n                  ) : (\n                    <p><b>Character:</b><span>Unknown</span>\n                    </p>\n                  )}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {!cast.length && (\n        <p>No information about film...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;"],"names":["axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","catch","error","Error","res","getCredits","cast","getReviews","getMoviesByName","query","useParams","useState","isLoading","setIsLoading","setCast","useEffect","fetchData","console","log","map","id","profile_path","name","character","imageSRC","profileError","src","alt","width","height","length"],"sourceRoot":""}